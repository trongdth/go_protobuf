// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// UserReq represents an user query
type UserReq struct {
	Req                  *BaseReq  `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	User                 *UserInfo `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UserReq) Reset()         { *m = UserReq{} }
func (m *UserReq) String() string { return proto.CompactTextString(m) }
func (*UserReq) ProtoMessage()    {}
func (*UserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *UserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserReq.Unmarshal(m, b)
}
func (m *UserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserReq.Marshal(b, m, deterministic)
}
func (m *UserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserReq.Merge(m, src)
}
func (m *UserReq) XXX_Size() int {
	return xxx_messageInfo_UserReq.Size(m)
}
func (m *UserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserReq proto.InternalMessageInfo

func (m *UserReq) GetReq() *BaseReq {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *UserReq) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

// UserInfo
type UserInfo struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName             string   `protobuf:"bytes,2,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserInfo) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *UserInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserInfo) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// UserRes : result + user info
type UserRes struct {
	Result               bool      `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	User                 *UserInfo `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UserRes) Reset()         { *m = UserRes{} }
func (m *UserRes) String() string { return proto.CompactTextString(m) }
func (*UserRes) ProtoMessage()    {}
func (*UserRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *UserRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRes.Unmarshal(m, b)
}
func (m *UserRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRes.Marshal(b, m, deterministic)
}
func (m *UserRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRes.Merge(m, src)
}
func (m *UserRes) XXX_Size() int {
	return xxx_messageInfo_UserRes.Size(m)
}
func (m *UserRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRes.DiscardUnknown(m)
}

var xxx_messageInfo_UserRes proto.InternalMessageInfo

func (m *UserRes) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UserRes) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterType((*UserReq)(nil), "protobuf.UserReq")
	proto.RegisterType((*UserInfo)(nil), "protobuf.UserInfo")
	proto.RegisterType((*UserRes)(nil), "protobuf.UserRes")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x8f, 0xbd, 0x4a, 0xc4, 0x40,
	0x10, 0xc7, 0xbd, 0xdc, 0x79, 0xae, 0x23, 0x0a, 0x37, 0x88, 0x84, 0x54, 0x12, 0x41, 0xac, 0x52,
	0x44, 0x9f, 0x40, 0xab, 0x6b, 0x2c, 0x46, 0xb4, 0xdf, 0x90, 0x09, 0x06, 0x72, 0x26, 0x99, 0x49,
	0xf4, 0xf5, 0x65, 0x27, 0x46, 0x11, 0x1b, 0xaf, 0x5a, 0xfe, 0x5f, 0xbf, 0xdd, 0x05, 0x18, 0x95,
	0x25, 0xeb, 0xa4, 0x1d, 0x5a, 0x74, 0x76, 0x14, 0x63, 0x95, 0x40, 0xe1, 0x95, 0x27, 0x37, 0x7d,
	0x81, 0xa3, 0x67, 0x65, 0x21, 0xee, 0xf1, 0x0a, 0x96, 0xc2, 0x7d, 0xbc, 0xb8, 0x5c, 0xdc, 0x9c,
	0xe4, 0x9b, 0x6c, 0xae, 0x67, 0xf7, 0x5e, 0x99, 0xb8, 0xa7, 0x90, 0xe2, 0x35, 0xac, 0x02, 0x33,
	0x8e, 0xac, 0x85, 0x3f, 0xad, 0x40, 0xd9, 0xbe, 0x55, 0x2d, 0x59, 0x9e, 0xbe, 0x82, 0x9b, 0x1d,
	0x3c, 0x83, 0xa8, 0x2e, 0x8d, 0x7b, 0x4a, 0x51, 0x5d, 0x62, 0x02, 0xae, 0x1a, 0x9b, 0xe6, 0xd1,
	0xef, 0xd8, 0x38, 0xc7, 0xf4, 0xad, 0xf1, 0x1c, 0x0e, 0x79, 0xe7, 0xeb, 0x26, 0x5e, 0x5a, 0x30,
	0x89, 0xb0, 0xe8, 0xbc, 0xea, 0x47, 0x2b, 0x65, 0xbc, 0x9a, 0x16, 0xb3, 0x4e, 0xb7, 0xf3, 0x0f,
	0x14, 0x2f, 0x60, 0x2d, 0xac, 0x63, 0x33, 0xd8, 0x65, 0x8e, 0xbe, 0xd4, 0x7f, 0x1f, 0x9d, 0xeb,
	0x84, 0x7a, 0x92, 0x77, 0xbc, 0x03, 0x78, 0x10, 0xf6, 0x03, 0x07, 0x03, 0x37, 0xbf, 0x27, 0xc4,
	0x7d, 0xf2, 0xc7, 0xd2, 0xf4, 0x00, 0x73, 0x70, 0xc4, 0xbe, 0xdc, 0x67, 0x53, 0xac, 0xcd, 0xbb,
	0xfd, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x27, 0x4e, 0xb7, 0xee, 0xac, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserSrvClient is the client API for UserSrv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserSrvClient interface {
	CreateUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserRes, error)
	ReadUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserRes, error)
}

type userSrvClient struct {
	cc *grpc.ClientConn
}

func NewUserSrvClient(cc *grpc.ClientConn) UserSrvClient {
	return &userSrvClient{cc}
}

func (c *userSrvClient) CreateUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserRes, error) {
	out := new(UserRes)
	err := c.cc.Invoke(ctx, "/protobuf.UserSrv/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userSrvClient) ReadUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserRes, error) {
	out := new(UserRes)
	err := c.cc.Invoke(ctx, "/protobuf.UserSrv/ReadUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserSrvServer is the server API for UserSrv service.
type UserSrvServer interface {
	CreateUser(context.Context, *UserReq) (*UserRes, error)
	ReadUser(context.Context, *UserReq) (*UserRes, error)
}

// UnimplementedUserSrvServer can be embedded to have forward compatible implementations.
type UnimplementedUserSrvServer struct {
}

func (*UnimplementedUserSrvServer) CreateUser(ctx context.Context, req *UserReq) (*UserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedUserSrvServer) ReadUser(ctx context.Context, req *UserReq) (*UserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadUser not implemented")
}

func RegisterUserSrvServer(s *grpc.Server, srv UserSrvServer) {
	s.RegisterService(&_UserSrv_serviceDesc, srv)
}

func _UserSrv_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSrvServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.UserSrv/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSrvServer).CreateUser(ctx, req.(*UserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserSrv_ReadUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSrvServer).ReadUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.UserSrv/ReadUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSrvServer).ReadUser(ctx, req.(*UserReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserSrv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.UserSrv",
	HandlerType: (*UserSrvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _UserSrv_CreateUser_Handler,
		},
		{
			MethodName: "ReadUser",
			Handler:    _UserSrv_ReadUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
